#include <iostream>
#include <string.h>
using namespace std;
void Manacher(char* s, int* P, int& from, int& to)
{
    int size = strlen(s);
    P[0] = 1;
    int id = 0;
    int mx = 1;
    int center = 0;	//最长回文子串的中心
  	int ml = 1;		//最长回文子串的长度
    for(int i = 1; i < size; i++)
    {
        if(mx > i)
        {
            if(P[2*id-i] != mx-i)
            {
                P[i] = min(P[2*id-i], mx-i);
            }
            else
            {
                P[i] = P[2*id-i];
                for(; s[i+P[i]] == s[i-P[i]]; P[i]++);
            }
        }
        else
        {
            P[i] = 1;
            for(; s[i+P[i]] == s[i-P[i]]; P[i]++);
        }
        if(mx < i+P[i])
        {
            mx = i + P[i];
            id = i;
        }
        if(ml < P[i])
        {
            ml = P[i];
            center = i;
        }
        from = center - ml + 1;
        to = center + ml - 1;
    }
}
void Print(const char* str, int from, int to)
{
    for(int i = from; i <= to; i++)
      cout << str[i];
    cout << '\n';
}
int main()
{
    string s = "aaba";
	  char* str = const_cast<char*>(s.c_str());
	  int N = strlen(str);
    int* P = new int[N];
    int from=0, to=0;
	  Manacher(str, P, from, to);
	  Print(str, from, to);
    return 0;
}
