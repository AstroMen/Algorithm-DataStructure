// Source : https://leetcode.com/problems/reverse-integer/
// Time:  O(logn) = O(1)
// Space: O(1)

/********************************************************************************** 
* 
* Reverse digits of an integer.
*
* Example1: x = 123, return 321
* Example2: x = -123, return -321 
*    
**********************************************************************************/

class Solution {
public:
    int reverse(int x) {
        long r=0;
        while(x)
            r=r*10+x%10,x/=10;
        return (r<INT_MIN || r>INT_MAX) ? 0 : r;
    }
};

// http://stackoverflow.com/questions/14695118/2147483648-0-returns-true-in-c
#define INT_MAX   2147483647
#define INT_MIN   (-INT_MAX-1)
class Solution {
public:
    int reverse(int x) {
        int r=0;
        int n;
        while(x)
        {
            n = x%10;
            //Checking the over/underflow.
            //Actually, it should be r>(INT_MAX-n)/10, but n/10 is 0, so omit it.
            if (r > INT_MAX/10 || r < INT_MIN/10){
                 return 0;
            }
            r = r*10 + n;
            x /= 10;
        }
        return (r<INT_MIN || r>INT_MAX) ? 0 : r;
    }
};
