// Source: https://leetcode.com/problems/remove-linked-list-elements/
// Time:  O(n)
// Space: O(1)

/********************************************************************************** 
* 
* Remove all elements from a linked list of integers that have value val.
* 
* Example
* Given: 1 --> 2 --> 6 --> 3 --> 4 --> 5 --> 6, val = 6
* Return: 1 --> 2 --> 3 --> 4 --> 5 
* 
**********************************************************************************/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 //25ms Refer: https://discuss.leetcode.com/topic/17550/concise-c-solution-with-pseudo-listhead
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode* dummy = new ListNode(0);
        dummy->next = head;
        ListNode *cur = dummy;
        while(cur)
        {
            if(cur->next && cur->next->val == val)
                cur->next = cur->next->next;
            else
                cur = cur->next;
        }
        return dummy->next;
    }
};

//29ms From: https://discuss.leetcode.com/topic/12580/3-line-recursive-solution
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        if (head == NULL) return NULL;
        head->next = removeElements(head->next, val);
        return head->val == val ? head->next : head;
    }
};
