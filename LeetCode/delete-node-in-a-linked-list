// Source : https://leetcode.com/problems/delete-node-in-a-linked-list/
// Time:  O(1)
// Space: O(1)

/********************************************************************************** 
* 
* Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.
* 
* Supposed the linked list is 1 -> 2 -> 3 -> 4 and you are given the third node with value 3,
* the linked list should become 1 -> 2 -> 4 after calling your function. 
* 
**********************************************************************************/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
//13ms From: https://discuss.leetcode.com/topic/18752/1-3-lines-c-java-python-c-c-javascript-ruby
class Solution {
public:
    void deleteNode(ListNode* node) {
        if(node==nullptr) return;
        ListNode* next = node->next;
        *node = *next;
        delete next;
    }
};
//这道题的处理方法是先把当前节点的值用下一个节点的值覆盖，然后删除下一个节点即可。
