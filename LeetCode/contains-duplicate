// Source : https://leetcode.com/problems/contains-duplicate/
// Time:  O(n)
// Space: O(n)

/********************************************************************************** 
* 
* Given an array of integers, return indices of the two numbers such that they add up to a specific target.
* 
* You may assume that each input would have exactly one solution.
* 
* Example:
* Given nums = [2, 7, 11, 15], target = 9,
* Because nums[0] + nums[1] = 2 + 7 = 9,
* return [0, 1].
*    
**********************************************************************************/

class Solution {
public:
    bool containsDuplicate(vector<int>& nums) {
        return nums.size() > unordered_set<int>(nums.begin(), nums.end()).size();
    }
};

//std::set is typically implemented as a binary search tree(RB tree in GCC 4.8). It costs O(nlogn) to construct.
//While std::unordered_set uses hash table, O(n) is expected.
