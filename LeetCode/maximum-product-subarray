// Source : https://leetcode.com/problems/maximum-product-subarray/
// Time:  O(n)
// Space: O(1)

/********************************************************************************** 
* 
* Find the contiguous subarray within an array (containing at least one number) which has the largest product.(product:乘积)
*
* For example, given the array [2,3,-2,4], the contiguous subarray [2,3] has the largest product = 6. 
*    
**********************************************************************************/

//6ms Reference: https://discuss.leetcode.com/topic/3585/share-c-code-with-dp-o-1-space-o-n-time
class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int promin = nums[0];
        int promax = nums[0];
        int res = promax;
        for(int i=1; i<nums.size(); i++)
        {
            if(nums[i]<0) swap(promax, promin);
            promax = max(promax*nums[i], nums[i]);
            promin = min(promin*nums[i], nums[i]);
            res = max(res, promax);
        }
        return res;
    }
};
