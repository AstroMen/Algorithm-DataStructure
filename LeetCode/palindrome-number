// Source : https://leetcode.com/problems/palindrome-number/
// Time:  O(n)
// Space: O(1)

/********************************************************************************** 
* 
* Determine whether an integer is a palindrome. Do this without extra space.
*    
**********************************************************************************/


//82ms
class Solution {
public:
    bool isPalindrome(int x) {
        if(x<0|| (x!=0 &&x%10==0)) return false;
        int sum=0;
        while(x>sum)
        {
            sum = sum*10+x%10;
            x = x/10;
        }
        return (x==sum)||(x==sum/10);
    }
};

//82ms
class Solution {
public:
    bool isPalindrome(int x) {
        if (x < 0) return false;
		int p1 = 0, p2 = x;
		while (p2 > 0) {
			p1 = p1*10 + p2%10;
			p2 /= 10;
		}
		return p1 == x;
    }
};

//69ms
class Solution {
public:
    bool isPalindrome(int x) {
        if(x < 0) return false;
        if(x < 10) return true;
        int y = 0;
        int tmp = x;
        while(tmp)
        {
            y = y * 10 + (tmp % 10);
            tmp /= 10;
        }

        return x == y;
    }
};

