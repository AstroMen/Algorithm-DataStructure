// Source: https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/
// Time:  O(n)
// Space: O(1)

/********************************************************************************** 
* 
* Follow up for "Remove Duplicates":
* What if duplicates are allowed at most twice?
* 
* For example,
* Given sorted array nums = [1,1,1,2,2,3],
* 
* Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesn't matter what you leave beyond the new length. 
* 
**********************************************************************************/

//16ms From: https://discuss.leetcode.com/topic/17180/3-6-easy-lines-c-java-python-ruby
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int i = 0;
        for (int n : nums)
            if (i < 2 || n > nums[i-2])
                nums[i++] = n;
        return i;
    }
};

//13ms From: https://discuss.leetcode.com/topic/22934/my-c-solution-16ms-5-lines/2
class Solution {
public:
    int removeDuplicates(vector<int>& nums) {
        int n = nums.size(), count = 0;
        for (int i = 2; i < n; i++)
            if (nums[i] == nums[i - 2 - count]) count++;
            else nums[i - count] = nums[i];
        return n - count;
    }
};
